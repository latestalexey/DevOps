#Использовать cmdline
#Использовать logos
#Использовать v8runner
#Использовать InternetMail

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

    Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);

КонецФункции

Процедура Оповестить(ТипОповещения = "Окончание", НазваниеБазы)

	СтруктураАдресов = Новый Структура;
	СтруктураАдресов.Вставить("ERP_MAV", Новый Структура("Email, Telegram","aleksey.marochkin@rtits.ru","-1001094974811"));
	СтруктураАдресов.Вставить("ECM_MAV", Новый Структура("Email, Telegram","aleksey.marochkin@rtits.ru","-1001094974811"));
	
	СтруктураАдресов.Вставить("ECM_TSS", Новый Структура("Email, Telegram","Svetlana.Timofeeva@rtits.ru",""));
	
	СтруктураАдресов.Вставить("ERP_MMY", Новый Структура("Email, Telegram","Mikhail.Madekin@rtits.ru",""));
	СтруктураАдресов.Вставить("ECM_MMY", Новый Структура("Email, Telegram","Mikhail.Madekin@rtits.ru",""));
	
	СтруктураАдресов.Вставить("ERP_BAS", Новый Структура("Email, Telegram","Aleksandr.Bogatov@rtits.ru","-1001124057695"));
	СтруктураАдресов.Вставить("ERP_BAS2", Новый Структура("Email, Telegram","Aleksandr.Bogatov@rtits.ru","-1001124057695"));
	
	СтруктураАдресов.Вставить("ERP_DAI", Новый Структура("Email, Telegram","Andrey.Dobrynin@rtits.ru",""));
	СтруктураАдресов.Вставить("ECM_DAI", Новый Структура("Email, Telegram","Andrey.Dobrynin@rtits.ru",""));
	
	СтруктураАдресов.Вставить("ERP_SOV", Новый Структура("Email, Telegram","Olga.Stogova@rtits.ru",""));

	СтруктураАдресов.Вставить("ERP_KAN", Новый Структура("Email, Telegram","Aleksey.Klimashenko@rtits.ru","-1001139532612"));
	СтруктураАдресов.Вставить("ECM_KAN", Новый Структура("Email, Telegram","Aleksey.Klimashenko@rtits.ru","-1001139532612"));
	
	СтруктураАдресов.Вставить("ERP_KSP", Новый Структура("Email, Telegram","Sergey.Kiselev@rtits.ru",""));
	СтруктураАдресов.Вставить("ERP_MSS", Новый Структура("Email, Telegram","Sergey.Menzhesarov@rtits.ru","-1001107290583"));
	
	СтруктураАдресов.Вставить("ERP_KDS", Новый Структура("Email, Telegram","Dmitriy.Klimashin@rtits.ru","-1001075061753"));
	СтруктураАдресов.Вставить("ECM_KDS", Новый Структура("Email, Telegram","Dmitriy.Klimashin@rtits.ru","-1001075061753"));
	
	СтруктураАдресов.Вставить("ERP_MKA", Новый Структура("Email, Telegram","Kseniya.Medvedeva@rtits.ru","-1001216550133"));

	СтруктураАдресов.Вставить("ERP_TEST1", Новый Структура("Email, Telegram","aleksey.marochkin@rtits.ru","-1001094974811"));
	СтруктураАдресов.Вставить("ERP_TEST2", Новый Структура("Email, Telegram","aleksey.marochkin@rtits.ru","-1001094974811"));
	СтруктураАдресов.Вставить("ERP_TEST3", Новый Структура("Email, Telegram","aleksey.marochkin@rtits.ru","-1001094974811"));
	
	ТекстСообщения = "";
	
	Если ТипОповещения = "Окончание" Тогда
	
		ТекстСообщения = "Настройка последней копии базы " + НазваниеБазы + " завершена!"
	
	Иначе
	
		ТекстСообщения = "Началась настройка последней копии базы " + НазваниеБазы + "!" + Символы.ПС +  "О завершении будет сообщено дополнительно."
	
	КонецЕсли;
		
	Если ЗначениеЗаполнено(СтруктураАдресов[НазваниеБазы].Telegram) Тогда
		
		Зап = Новый HTTPЗапрос("/bot373923831:AAGqI4Fu4UogxTVaxaq7rb_dNE4BWorbjZs/sendMessage?chat_id=" + СтруктураАдресов[НазваниеБазы].Telegram + "&text=" + ТекстСообщения);
		
		Соед = Новый HTTPСоединение("api.telegram.org");
		Соед.Получить(Зап);
		
	КонецЕсли;	

КонецПроцедуры

//ИмяРодительскогоПлана = АргументыКоманднойСтроки[0];
//РабочийКаталог = АргументыКоманднойСтроки[1];

АргументыКС = Новый ПарсерАргументовКоманднойСтроки();
//АргументыКС.ДобавитьИменованныйПараметр("-ibname");
//АргументыКС.ДобавитьИменованныйПараметр("-srvname");
АргументыКС.ДобавитьИменованныйПараметр("-usr");
АргументыКС.ДобавитьИменованныйПараметр("-pwd");
АргументыКС.ДобавитьИменованныйПараметр("-planname");
АргументыКС.ДобавитьИменованныйПараметр("-catname");
АргументыКС.ДобавитьИменованныйПараметр("-dourl");


Параметры = АргументыКС.Разобрать(АргументыКоманднойСтроки);

ИмяРодительскогоПлана = Параметры["-planname"];
РабочийКаталог = Параметры["-catname"];
ПутьКПубликацииДО = Параметры["-dourl"];

МассивСтрок = СтрРазделить(ИмяРодительскогоПлана, "-");
МассивСтрок.Удалить(МассивСтрок.Количество() - 1);

Если Не МассивСтрок[0] = "ERP" Тогда

	ЗавершитьРаботу(0);

КонецЕсли;

//БазаИсточник = МассивСтрок[0] + "_Production";
ИмяБазы = СтрСоединить(МассивСтрок,"_");


//ИмяСервера = Параметры["-srvname"];
ИмяСервера = "RTITS-1C-04";
//ИмяБазы = Параметры["-ibname"];
Пользователь = Параметры["-usr"];
Пароль = Параметры["-pwd"];



ИмяФайлаЖурнала = ОбъединитьПути(РабочийКаталог, "Logs", ИмяБазы + ".log");
Файл = Новый Файл(ИмяФайлаЖурнала);
СоздатьКаталог(Файл.Путь);
КаталогЖурналов = Файл.Путь;

Журнал = Логирование.ПолучитьЛог("doconfig.app");
Журнал.УстановитьУровень(УровниЛога.Информация);
Журнал.УстановитьРаскладку(ЭтотОбъект);

КонсольЖурн = Новый ВыводЛогаВКонсоль;
ФайлЖурнала = Новый ВыводЛогаВФайл;
ФайлЖурнала.ОткрытьФайл(ИмяФайлаЖурнала, "windows-1251");

Журнал.ДобавитьСпособВывода(ФайлЖурнала);
Журнал.ДобавитьСпособВывода(КонсольЖурн);

УправлениеКонфигуратором = Новый УправлениеКонфигуратором();
ПутьКПлатформе1С = УправлениеКонфигуратором.ПолучитьПутьКВерсииПлатформы("8.3.10");

ЖурналЗагрузкиИзменений = ОбъединитьПути(КаталогЖурналов, "DoConfig_" + ИмяБазы + ".log");

Журнал.Информация("Начало настройки интеграции с ДО.");
Журнал.Информация("Запуск: """ + ПутьКПлатформе1С + """ ENTERPRISE /UC 456654 /S """ + ИмяСервера + "\" +
					ИмяБазы + """ /N """ + Пользователь + """ /P ""******"" /DisableStartupMessages /DisableStartupDialogs /C""ExecuteADP &name Обработка настройки интеграции с ДО &command ВыполнитьНаСервере &doref " + ПутьКПубликацииДО + " &sjoff true &sjlist ИнтеграцияС1СДокументооборотВыполнитьОбменДанными,СинхронизацияДанных &docat D:\Users\Common\Обмен &logoff true"" /out """ + ЖурналЗагрузкиИзменений + """");
					
Оповестить("Начало", ИмяБазы);
					
ПроцессПредприятия = Создатьпроцесс("""" + ПутьКПлатформе1С + """ ENTERPRISE /UC 456654 /S """ + ИмяСервера + "\" + ИмяБазы + """ /N """ + Пользователь +""" /P """ + Пароль + """ /DisableStartupMessages /DisableStartupDialogs /C""ExecuteADP &name Обработка настройки интеграции с ДО &command ВыполнитьНаСервере &doref " + ПутьКПубликацииДО + " &sjoff true &sjlist ИнтеграцияС1СДокументооборотВыполнитьОбменДанными,СинхронизацияДанных &docat D:\Users\Common\Обмен &logoff true"" /out """ + ЖурналЗагрузкиИзменений + """"
											,РабочийКаталог
											,Истина
											,Ложь
											,КодировкаТекста.UTF8);
ПроцессПредприятия.Запустить();										
ПроцессПредприятия.ОжидатьЗавершения();

Оповестить("Окончание", ИмяБазы);

Журнал.Информация("Настройка интеграции базы " + ИмяБазы + " с ДО завершена");

ФайлЖурнала.Закрыть();

ЗавершитьРаботу(0);