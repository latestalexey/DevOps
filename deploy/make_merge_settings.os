#Использовать cmdline
#Использовать logos

Функция Форматировать(Знач Уровень, Знач Сообщение) Экспорт

    Возврат СтрШаблон("%1: %2 - %3", ТекущаяДата(), УровниЛога.НаименованиеУровня(Уровень), Сообщение);

КонецФункции

АргументыКС = Новый ПарсерАргументовКоманднойСтроки();
АргументыКС.ДобавитьИменованныйПараметр("-source");
АргументыКС.ДобавитьИменованныйПараметр("-output");

Параметры = АргументыКС.Разобрать(АргументыКоманднойСтроки);

ИмяИсходногоПатча = Параметры["-source"];
ИмяРезултирующегоФайла = Параметры["-output"];

Файл = Новый Файл(ИмяРезултирующегоФайла);
СоздатьКаталог(Файл.Путь);
МасПуть = СтрРазделить(Файл.Путь, "\");
МасПуть.Удалить(МасПуть.Количество()-1);
ПутьКРепозиторию = СтрСоединить(МасПуть, "\");

ИмяФайлаЖурнала = ОбъединитьПути(ТекущийКаталог(), "Logs", "GIT", "convert_patch.log");
Файл = Новый Файл(ИмяФайлаЖурнала);
СоздатьКаталог(Файл.Путь);

Журнал = Логирование.ПолучитьЛог("make_merge_settings");
Журнал.УстановитьУровень(УровниЛога.Информация);
Журнал.УстановитьРаскладку(ЭтотОбъект);

КонсольЖурн = Новый ВыводЛогаВКонсоль;
ФайлЖурнала = Новый ВыводЛогаВФайл;
ФайлЖурнала.ОткрытьФайл(ИмяФайлаЖурнала);

Журнал.ДобавитьСпособВывода(ФайлЖурнала);
Журнал.ДобавитьСпособВывода(КонсольЖурн);

ПозицияПервойСтроки = 0;

ЧТ = Новый ЧтениеТекста(ИмяИсходногоПатча, КодировкаТекста.UTF8);
ТекстПатча = ЧТ.Прочитать();
ЧТ.Закрыть();

МассивОбъектов = СтрРазделить(ТекстПатча, "diff --git");
МассивОбъектов.Удалить(0);

СтруктураОбъектов = Новый Структура;

Для каждого Объект из МассивОбъектов Цикл

	СоставляющиеОбъекта = СтрРазделить(Объект, "+++ ");
	
	Если СоставляющиеОбъекта.Количество() > 1 Тогда
	
		ПутьОбъекта = Сред(СоставляющиеОбъекта[0], СтрНайти(СоставляющиеОбъекта[0], "--- a/") + 6, СтрДлина(СоставляющиеОбъекта[0]) - СтрНайти(СоставляющиеОбъекта[0], "--- ") - 6);
		ПутьОбъекта = СтрЗаменить(ПутьОбъекта, Символы.ПС, "");
		ПутьОбъекта = СтрЗаменить(ПутьОбъекта, "/", "\");
		
		СоставляющиеОбъекта[1] = Сред(СоставляющиеОбъекта[1], СтрНайти(СоставляющиеОбъекта[1], "@@ "));
		
		ФайлОбъекта = Новый Файл(ПутьОбъекта);
		
		Если ФайлОбъекта.Расширение = ".bsl" Тогда
		
			СтруктураОбъекта = СтрРазделить(ПутьОбъекта, "\");
			СтруктураОбъекта.Удалить(0);
			
			СтруктураОбъекта[0] = ?(Прав(СтруктураОбъекта[0], 1) = "s", Сред(СтруктураОбъекта[0], 1, СтрДлина(СтруктураОбъекта[0]) - 1), СтруктураОбъекта[0]);
			СтруктураОбъекта[0] = ?(Прав(СтруктураОбъекта[0], 3) = "sse", Сред(СтруктураОбъекта[0], 1, СтрДлина(СтруктураОбъекта[0]) - 1), СтруктураОбъекта[0]);
			
			ПолноеимяОбъекта = "";
			wasExt = Ложь;
			ЭтоФорма = Ложь;
			
			Для Каждого ЧастьИмениОбъекта Из СтруктураОбъекта Цикл
			
				Если ЧастьИмениОбъекта = "Ext" Тогда
					wasExt = Истина;
				КонецЕсли;
					
				Если НЕ wasExt Тогда
					ПолноеимяОбъекта = ПолноеимяОбъекта + ?(ПолноеимяОбъекта="", "", "__") + СтрЗаменить(ЧастьИмениОбъекта, "Forms", "Form");				
				Иначе
					Если ЧастьИмениОбъекта = "Form" Тогда
						ЭтоФорма = Истина;
						Продолжить;
					КонецЕсли;
					
					ИмяМодуля = СтрЗаменить(ЧастьИмениОбъекта, ".bsl", "");
					
				КонецЕсли;
			
			КонецЦикла;
			
			Если НЕ СтруктураОбъектов.Свойство(ПолноеимяОбъекта) Тогда
			
				СтруктураОбъектов.Вставить(ПолноеимяОбъекта, Новый Структура);
				
			КонецЕсли;	
			
			СтруктураОбъектов[ПолноеимяОбъекта].Вставить(ИмяМодуля, Новый Структура("ЭтоФорма, ТекстПатча", ЭтоФорма, СоставляющиеОбъекта[1]));
		
		КонецЕсли;
		
	КонецЕсли;	
		
КонецЦикла;

ЗХмл = Новый ЗаписьXML;
ЗХмл.ОткрытьФайл(ИмяРезултирующегоФайла);
ЗХмл.ЗаписатьОбъявлениеXML();
ЗХмл.ЗаписатьНачалоЭлемента("Settings", "http://v8.1c.ru/8.3/config/merge/settings");
ЗХмл.ЗаписатьСоответствиеПространстваИмен("xs", "http://www.w3.org/2001/XMLSchema");
ЗХмл.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
ЗХмл.ЗаписатьАтрибут("version", "1.1");
ЗХмл.ЗаписатьАтрибут("platformVersion", "8.3.11");

ЗХмл.ЗаписатьНачалоЭлемента("Objects");

Для каждого Объект из СтруктураОбъектов Цикл

	ЗХмл.ЗаписатьНачалоЭлемента("Object");
	ЗХмл.ЗаписатьАтрибут("fullName", СтрЗаменить(Объект.Ключ, "__", "."));
		
		ЗХмл.ЗаписатьНачалоЭлемента("Properties");
		
		Для каждого Свойство из Объект.Значение Цикл
		
			ЗХмл.ЗаписатьНачалоЭлемента("Property");
			ЗХмл.ЗаписатьАтрибут("name", ?(Свойство.Значение.ЭтоФорма, "Форма", Свойство.Ключ));
			
			ЗХмл.ЗаписатьНачалоЭлемента("MergeRule");
			ЗХмл.ЗаписатьТекст("GetFromSecondConfiguration");
			ЗХмл.ЗаписатьКонецЭлемента();
			
			Если Свойство.Значение.ЭтоФорма Тогда
			
				ЗХмл.ЗаписатьНачалоЭлемента("FormModule");
					ЗХмл.ЗаписатьНачалоЭлемента("MergeRule");
						ЗХмл.ЗаписатьТекст("GetFromSecondConfiguration");
					ЗХмл.ЗаписатьКонецЭлемента();
					
					ЗХмл.ЗаписатьНачалоЭлемента("Module");
						ЗХмл.ЗаписатьНачалоЭлемента("Patch");
							ЗХмл.ЗаписатьТекст(Свойство.Значение.ТекстПатча);
						ЗХмл.ЗаписатьКонецЭлемента();
					ЗХмл.ЗаписатьКонецЭлемента();
				ЗХмл.ЗаписатьКонецЭлемента();
				
			
			Иначе
			
				ЗХмл.ЗаписатьНачалоЭлемента("Module");
					ЗХмл.ЗаписатьНачалоЭлемента("Patch");
						ЗХмл.ЗаписатьТекст(Свойство.Значение.ТекстПатча);
					ЗХмл.ЗаписатьКонецЭлемента();
				ЗХмл.ЗаписатьКонецЭлемента();
			
			КонецЕсли;
			
			ЗХмл.ЗаписатьКонецЭлемента();
	
		КонецЦикла;
	
		ЗХмл.ЗаписатьКонецЭлемента();
	
	ЗХмл.ЗаписатьКонецЭлемента();

КонецЦикла;

ЗХмл.ЗаписатьКонецЭлемента();

ЗХмл.ЗаписатьКонецЭлемента();

ЗХмл.Закрыть();

Журнал.Информация("Записан файл: " + ИмяРезултирующегоФайла);
